# .github/workflows/e2e-tests.yml
# Workflow Simplificado para Testes E2E com Playwright
# Projeto: DevOps UNISATC A3 - Strapi Application

name: üé≠ E2E Tests

on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10.12.1'

jobs:
  # Job √∫nico e simplificado
  e2e-tests:
    name: üß™ E2E Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with: 
          node-version: ${{ env.NODE_VERSION }}

      - name: üîß Setup pnpm
        uses: pnpm/action-setup@v3
        with: 
          version: ${{ env.PNPM_VERSION }}

      - name: üíæ Cache Dependencies
        uses: actions/cache@v4
        with:
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: node-modules-${{ runner.os }}-
          path: |
            node_modules
            ~/.cache/ms-playwright

      - name: üì• Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: üî® Rebuild better-sqlite3 bindings
        run: pnpm exec npm rebuild better-sqlite3

      - name: üé≠ Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: üìÅ Create Required Directories
        run: |
          mkdir -p build
          mkdir -p .tmp
          echo "Build directory created" > build/placeholder.txt
          echo "Temp directory created" > .tmp/placeholder.txt

      - name: üèóÔ∏è Build Strapi
        run: pnpm build
        env:
          NODE_ENV: production
          DATABASE_CLIENT: sqlite
          DATABASE_FILENAME: .tmp/data.db

      - name: üöÄ Start Strapi in Background
        run: |
          pnpm start &
          echo $! > strapi.pid
        env:
          NODE_ENV: test
          HOST: 0.0.0.0
          PORT: 1337
          DATABASE_CLIENT: sqlite
          DATABASE_FILENAME: .tmp/test-data.db
          STRAPI_DISABLE_UPDATE_NOTIFICATION: true
          JWT_SECRET: "dummy"
          ADMIN_JWT_SECRET: "dummy"
          APP_KEYS: "dummy"
          API_TOKEN_SALT: "dummy"
          TRANSFER_TOKEN_SALT: "dummy"

      - name: ‚è≥ Wait for Strapi to be Ready
        run: |
          echo "Aguardando Strapi ficar saud√°vel..."
          timeout 120s bash -c 'until curl -fs http://localhost:1337/admin/auth/login/strapi; do echo "‚è≥ Aguardando..."; sleep 5; done'
          echo "‚úÖ Strapi est√° pronto!"

      - name: üé≠ Run E2E Tests
        run: pnpm test --reporter=list
        env:
          CI: true
          STRAPI_URL: http://localhost:1337

      - name: üìä Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_id }}
          path: |
            test-results/
            playwright-report/
          retention-days: 7

      - name: üßπ Cleanup Strapi Process
        if: always()
        run: |
          if [ -f strapi.pid ]; then
            kill $(cat strapi.pid) || true
            rm strapi.pid
          fi
