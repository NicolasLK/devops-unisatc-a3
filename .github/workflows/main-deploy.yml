# Workflow que constr√≥i a imagem Docker e faz o deploy no GKE via Terraform.
name: üöÄ CI/CD - Strapi A3

on:
  push:
    branches:
      - master

env:
  # Configura√ß√µes globais
  GCP_REGION: southamerica-east1
  ARTIFACT_HOSTNAME: southamerica-east1-docker.pkg.dev
  GCP_PROJECT_ID: sound-dialect-458215-j9
  GCP_PROJECT_NUMBER: 159248096205
  GCP_ARTIFACT_REPO: devops-repo
  APP_NAME: strapi-app
  
  # Credenciais para o Workload Identity Federation
  GCP_SERVICE_ACCOUNT: strapi-deployer@sound-dialect-458215-j9.iam.gserviceaccount.com
  WIF_POOL: github-pool-a3
  WIF_PROVIDER: github-provider

jobs:
  # ===================================================================
  # JOB 1: CONSTRUIR E PUBLICAR A IMAGEM DOCKER
  # ===================================================================
  build-and-push:
    name: üê≥ Construir e Publicar Imagem Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      image_name: ${{ steps.build_and_push_image.outputs.image_name }}
    steps:
      - name: üì• Checkout do C√≥digo
        uses: actions/checkout@v4

      - name: üîê Autentica√ß√£o no Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: "projects/${{ env.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.WIF_POOL }}/providers/${{ env.WIF_PROVIDER }}"
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: üèóÔ∏è Construir e Enviar Imagem
        id: build_and_push_image # O ID correto do passo
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet
          IMAGE_TAG=${{ github.sha }}
          IMAGE_NAME="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.APP_NAME }}:${IMAGE_TAG}"
          echo "Construindo e enviando a imagem: $IMAGE_NAME"
          docker build -t "$IMAGE_NAME" .
          docker push "$IMAGE_NAME"
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT

  # ===================================================================
  # JOB 2: FAZER O DEPLOY DA INFRAESTRUTURA COM TERRAFORM
  # ===================================================================
  deploy:
    name: ‚òÅÔ∏è Deploy no GKE com Terraform
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
      id-token: write
    steps:
      - name: üì• Checkout do C√≥digo
        uses: actions/checkout@v4

      - name: üîê Autentica√ß√£o no Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: "projects/${{ env.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.WIF_POOL }}/providers/${{ env.WIF_PROVIDER }}"
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: üõ†Ô∏è Configurar Terraform
        uses: hashicorp/setup-terraform@v3

      - name: üåç Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: üèóÔ∏è Terraform Apply
        env:
          # Injeta os segredos do reposit√≥rio no Terraform
          TF_VAR_app_keys: ${{ secrets.STRAPI_APP_KEYS }}
          TF_VAR_api_token_salt: ${{ secrets.STRAPI_API_TOKEN_SALT }}
          TF_VAR_admin_jwt_secret: ${{ secrets.STRAPI_ADMIN_JWT_SECRET }}
          TF_VAR_jwt_secret: ${{ secrets.STRAPI_JWT_SECRET }}
          TF_VAR_transfer_token_salt: ${{ secrets.STRAPI_TRANSFER_TOKEN_SALT }}
        run: terraform apply -auto-approve -var="strapi_image=${{ needs.build-and-push.outputs.image_name }}"
        working-directory: ./terraform